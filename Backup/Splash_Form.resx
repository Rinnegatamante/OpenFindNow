<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPicture.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>